# Generated by Django 2.0.13 on 2019-09-05 05:53

import datetime
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0003_address_index'),
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('unique_id', models.IntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Errors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, choices=[('U', 'Unpaid'), ('S', 'To Ship'), ('H', 'Shipping'), ('C', 'Completed'), ('L', 'Cancellation'), ('R', 'Return/Refund')], default=('U', 'Unpaid'), max_length=500, null=True)),
                ('countdown', models.CharField(blank=True, max_length=500, null=True)),
                ('shipping_channel', models.CharField(blank=True, max_length=500, null=True)),
                ('creation_date', models.CharField(blank=True, max_length=500, null=True)),
                ('paid_date', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(blank=True, max_length=500, null=True)),
                ('product_name', models.CharField(blank=True, max_length=500, null=True)),
                ('product_description', models.TextField(blank=True, null=True)),
                ('parent_sku_reference_no', models.CharField(blank=True, max_length=500, null=True)),
                ('product_status', models.CharField(blank=True, choices=[('UNPUBLISHED', 'Unpublished'), ('LIVE_APPROVAL', 'For Approval'), ('LIVE_APPROVED', 'Live'), ('UNLISTED', 'Unlisted'), ('SUSPENDED', 'Suspended')], default=('UNPUBLISHED', 'Unpublished'), max_length=500, null=True)),
                ('status_changed_on', models.DateTimeField(default=datetime.datetime.now)),
                ('cover_image_url', models.CharField(blank=True, help_text='Cover photo must have a white background', max_length=2000, null=True)),
                ('stock_sum', models.IntegerField(blank=True, default=None, null=True)),
                ('product_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, max_length=500, null=True)),
                ('product_length', models.DecimalField(blank=True, decimal_places=2, max_digits=5, max_length=500, null=True)),
                ('product_width', models.DecimalField(blank=True, decimal_places=2, max_digits=5, max_length=500, null=True)),
                ('product_height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, max_length=500, null=True)),
                ('product_price', models.DecimalField(blank=True, decimal_places=2, max_digits=100, max_length=500, null=True)),
                ('ship_out_in', models.IntegerField(blank=True, null=True)),
                ('product_brand', models.CharField(blank=True, max_length=500, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='product.Category')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='users.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImportPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.BasePage')),
                ('body', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('image_block', wagtail.images.blocks.ImageChooserBlock(icon='image', label='Image Block'))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('base.basepage',),
        ),
        migrations.CreateModel(
            name='ProductPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.BasePage')),
                ('body', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('image_block', wagtail.images.blocks.ImageChooserBlock(icon='image', label='Image Block'))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('base.basepage',),
        ),
        migrations.CreateModel(
            name='ProductsImportPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.BasePage')),
                ('body', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('image_block', wagtail.images.blocks.ImageChooserBlock(icon='image', label='Image Block'))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('base.basepage',),
        ),
        migrations.CreateModel(
            name='ProductsPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.BasePage')),
                ('body', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('image_block', wagtail.images.blocks.ImageChooserBlock(icon='image', label='Image Block'))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('base.basepage',),
        ),
        migrations.CreateModel(
            name='Variations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('sku', models.CharField(blank=True, max_length=500, null=True)),
                ('price', models.CharField(blank=True, max_length=500, null=True)),
                ('stock', models.IntegerField(blank=True, null=True)),
                ('sale_price', models.IntegerField(blank=True, default=None, null=True)),
                ('sale_date_start', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
                ('sale_date_end', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
                ('sale_time_start', models.TimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('sale_time_end', models.TimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('image_url', models.CharField(blank=True, help_text='Optional: If your image is already hosted', max_length=2000, null=True)),
                ('image_upload', models.ImageField(blank=True, help_text='Optional: If you want to upload a new image. This will replace the image in the URL provided when bulk upload is performed.', null=True, upload_to='original_images')),
                ('image_url_from_upload', models.CharField(blank=True, max_length=2000, null=True)),
                ('image_url_from_sku', models.CharField(blank=True, max_length=2000, null=True)),
                ('product', modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='product.Product')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(to='product.Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='users.Profile'),
        ),
        migrations.AddField(
            model_name='errors',
            name='product',
            field=modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='product.Product'),
        ),
    ]
